Terminals unused in grammar

    TK_PR_INPUT
    TK_PR_OUTPUT
    TK_PR_FOR
    TK_ERRO


Grammar

    0 $accept: program $end

    1 program: program globalVar
    2        | program function
    3        | ε

    4 types: TK_PR_INT
    5      | TK_PR_FLOAT
    6      | TK_PR_BOOL
    7      | TK_PR_CHAR

    8 literalTypes: TK_LIT_INT
    9             | TK_LIT_FLOAT
   10             | TK_LIT_FALSE
   11             | TK_LIT_TRUE
   12             | TK_LIT_CHAR

   13 identifier: TK_IDENTIFICADOR

   14 globalVar: types identifier multoArray varList ';'

   15 multoArray: '[' expression multoArrayList ']'
   16           | ε

   17 multoArrayList: multoArrayList '^' expression
   18               | ε

   19 varList: varList ',' identifier multoArray
   20        | ε

   21 function: functionHeader commandBlock

   22 functionHeader: types identifier '(' parameter parameterList ')'

   23 parameter: types identifier
   24          | ε

   25 parameterList: ',' types identifier parameterList
   26              | ε

   27 command: variableDeclaration ';'
   28        | attribution ';'
   29        | functionCall ';'
   30        | returnCommand ';'
   31        | fluxControl ';'
   32        | commandBlock ';'
   33        | repetition ';'
   34        | returnCommand

   35 commandList: command commandList
   36            | ε

   37 commandBlock: '{' commandList '}'

   38 localVariable: identifier
   39              | identifier TK_OC_LE literalTypes

   40 localVariableList: ',' localVariable localVariableList
   41                  | ε

   42 variableDeclaration: types localVariable localVariableList

   43 attribution: identifier multoArray '=' expression

   44 functionCall: identifier '(' expression expressionList ')'
   45             | identifier '(' ')'

   46 returnCommand: TK_PR_RETURN expression ';'

   47 expressionList: ',' expression expressionList
   48               | ε

   49 expression: unary operando
   50           | mathExpression
   51           | '(' mathExpression ')'

   52 mathExpression: expression operador operando

   53 operador: '+'
   54         | '-'
   55         | '/'
   56         | '*'
   57         | '%'
   58         | '<'
   59         | '>'
   60         | TK_OC_LE
   61         | TK_OC_GE
   62         | TK_OC_EQ
   63         | TK_OC_NE
   64         | TK_OC_AND
   65         | TK_OC_OR

   66 unary: '-'
   67      | '!'
   68      | ε

   69 operando: identifier multoArray
   70         | literalTypes
   71         | functionCall

   72 fluxControl: TK_PR_IF '(' expression ')' TK_PR_THEN commandBlock else

   73 else: TK_PR_ELSE commandBlock
   74     | ε

   75 repetition: TK_PR_WHILE '(' expression ')' commandBlock


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 67
    '%' (37) 57
    '(' (40) 22 44 45 51 72 75
    ')' (41) 22 44 45 51 72 75
    '*' (42) 56
    '+' (43) 53
    ',' (44) 19 25 40 47
    '-' (45) 54 66
    '/' (47) 55
    ';' (59) 14 27 28 29 30 31 32 33 46
    '<' (60) 58
    '=' (61) 43
    '>' (62) 59
    '[' (91) 15
    ']' (93) 15
    '^' (94) 17
    '{' (123) 37
    '}' (125) 37
    error (256)
    TK_PR_INT (258) 4
    TK_PR_FLOAT (259) 5
    TK_PR_BOOL (260) 6
    TK_PR_CHAR (261) 7
    TK_PR_IF (262) 72
    TK_PR_THEN (263) 72
    TK_PR_ELSE (264) 73
    TK_PR_WHILE (265) 75
    TK_PR_INPUT (266)
    TK_PR_OUTPUT (267)
    TK_PR_RETURN (268) 46
    TK_PR_FOR (269)
    TK_OC_LE (270) 39 60
    TK_OC_GE (271) 61
    TK_OC_EQ (272) 62
    TK_OC_NE (273) 63
    TK_OC_AND (274) 64
    TK_OC_OR (275) 65
    TK_LIT_INT (276) 8
    TK_LIT_FLOAT (277) 9
    TK_LIT_FALSE (278) 10
    TK_LIT_TRUE (279) 11
    TK_LIT_CHAR (280) 12
    TK_IDENTIFICADOR (281) 13
    TK_ERRO (282)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program (47)
        on left: 1 2 3
        on right: 0 1 2
    types (48)
        on left: 4 5 6 7
        on right: 14 22 23 25 42
    literalTypes (49)
        on left: 8 9 10 11 12
        on right: 39 70
    identifier (50)
        on left: 13
        on right: 14 19 22 23 25 38 39 43 44 45 69
    globalVar (51)
        on left: 14
        on right: 1
    multoArray (52)
        on left: 15 16
        on right: 14 19 43 69
    multoArrayList (53)
        on left: 17 18
        on right: 15 17
    varList (54)
        on left: 19 20
        on right: 14 19
    function (55)
        on left: 21
        on right: 2
    functionHeader (56)
        on left: 22
        on right: 21
    parameter (57)
        on left: 23 24
        on right: 22
    parameterList (58)
        on left: 25 26
        on right: 22 25
    command (59)
        on left: 27 28 29 30 31 32 33 34
        on right: 35
    commandList (60)
        on left: 35 36
        on right: 35 37
    commandBlock (61)
        on left: 37
        on right: 21 32 72 73 75
    localVariable (62)
        on left: 38 39
        on right: 40 42
    localVariableList (63)
        on left: 40 41
        on right: 40 42
    variableDeclaration (64)
        on left: 42
        on right: 27
    attribution (65)
        on left: 43
        on right: 28
    functionCall (66)
        on left: 44 45
        on right: 29 71
    returnCommand (67)
        on left: 46
        on right: 30 34
    expressionList (68)
        on left: 47 48
        on right: 44 47
    expression (69)
        on left: 49 50 51
        on right: 15 17 43 44 46 47 52 72 75
    mathExpression (70)
        on left: 52
        on right: 50 51
    operador (71)
        on left: 53 54 55 56 57 58 59 60 61 62 63 64 65
        on right: 52
    unary (72)
        on left: 66 67 68
        on right: 49
    operando (73)
        on left: 69 70 71
        on right: 49 52
    fluxControl (74)
        on left: 72
        on right: 31
    else (75)
        on left: 73 74
        on right: 72
    repetition (76)
        on left: 75
        on right: 33


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • globalVar
    2        | program • function

    $end         shift, and go to state 2
    TK_PR_INT    shift, and go to state 3
    TK_PR_FLOAT  shift, and go to state 4
    TK_PR_BOOL   shift, and go to state 5
    TK_PR_CHAR   shift, and go to state 6

    types           go to state 7
    globalVar       go to state 8
    function        go to state 9
    functionHeader  go to state 10


State 2

    0 $accept: program $end •

    $default  accept


State 3

    4 types: TK_PR_INT •

    $default  reduce using rule 4 (types)


State 4

    5 types: TK_PR_FLOAT •

    $default  reduce using rule 5 (types)


State 5

    6 types: TK_PR_BOOL •

    $default  reduce using rule 6 (types)


State 6

    7 types: TK_PR_CHAR •

    $default  reduce using rule 7 (types)


State 7

   14 globalVar: types • identifier multoArray varList ';'
   22 functionHeader: types • identifier '(' parameter parameterList ')'

    TK_IDENTIFICADOR  shift, and go to state 11

    identifier  go to state 12


State 8

    1 program: program globalVar •

    $default  reduce using rule 1 (program)


State 9

    2 program: program function •

    $default  reduce using rule 2 (program)


State 10

   21 function: functionHeader • commandBlock

    '{'  shift, and go to state 13

    commandBlock  go to state 14


State 11

   13 identifier: TK_IDENTIFICADOR •

    $default  reduce using rule 13 (identifier)


State 12

   14 globalVar: types identifier • multoArray varList ';'
   22 functionHeader: types identifier • '(' parameter parameterList ')'

    '['  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 16 (multoArray)

    multoArray  go to state 17


State 13

   37 commandBlock: '{' • commandList '}'

    TK_PR_INT         shift, and go to state 3
    TK_PR_FLOAT       shift, and go to state 4
    TK_PR_BOOL        shift, and go to state 5
    TK_PR_CHAR        shift, and go to state 6
    TK_PR_IF          shift, and go to state 18
    TK_PR_WHILE       shift, and go to state 19
    TK_PR_RETURN      shift, and go to state 20
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 13

    $default  reduce using rule 36 (commandList)

    types                go to state 21
    identifier           go to state 22
    command              go to state 23
    commandList          go to state 24
    commandBlock         go to state 25
    variableDeclaration  go to state 26
    attribution          go to state 27
    functionCall         go to state 28
    returnCommand        go to state 29
    fluxControl          go to state 30
    repetition           go to state 31


State 14

   21 function: functionHeader commandBlock •

    $default  reduce using rule 21 (function)


State 15

   15 multoArray: '[' • expression multoArrayList ']'

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 35
    mathExpression  go to state 36
    unary           go to state 37


State 16

   22 functionHeader: types identifier '(' • parameter parameterList ')'

    TK_PR_INT    shift, and go to state 3
    TK_PR_FLOAT  shift, and go to state 4
    TK_PR_BOOL   shift, and go to state 5
    TK_PR_CHAR   shift, and go to state 6

    $default  reduce using rule 24 (parameter)

    types      go to state 38
    parameter  go to state 39


State 17

   14 globalVar: types identifier multoArray • varList ';'

    $default  reduce using rule 20 (varList)

    varList  go to state 40


State 18

   72 fluxControl: TK_PR_IF • '(' expression ')' TK_PR_THEN commandBlock else

    '('  shift, and go to state 41


State 19

   75 repetition: TK_PR_WHILE • '(' expression ')' commandBlock

    '('  shift, and go to state 42


State 20

   46 returnCommand: TK_PR_RETURN • expression ';'

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 43
    mathExpression  go to state 36
    unary           go to state 37


State 21

   42 variableDeclaration: types • localVariable localVariableList

    TK_IDENTIFICADOR  shift, and go to state 11

    identifier     go to state 44
    localVariable  go to state 45


State 22

   43 attribution: identifier • multoArray '=' expression
   44 functionCall: identifier • '(' expression expressionList ')'
   45             | identifier • '(' ')'

    '['  shift, and go to state 15
    '('  shift, and go to state 46

    $default  reduce using rule 16 (multoArray)

    multoArray  go to state 47


State 23

   35 commandList: command • commandList

    TK_PR_INT         shift, and go to state 3
    TK_PR_FLOAT       shift, and go to state 4
    TK_PR_BOOL        shift, and go to state 5
    TK_PR_CHAR        shift, and go to state 6
    TK_PR_IF          shift, and go to state 18
    TK_PR_WHILE       shift, and go to state 19
    TK_PR_RETURN      shift, and go to state 20
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 13

    $default  reduce using rule 36 (commandList)

    types                go to state 21
    identifier           go to state 22
    command              go to state 23
    commandList          go to state 48
    commandBlock         go to state 25
    variableDeclaration  go to state 26
    attribution          go to state 27
    functionCall         go to state 28
    returnCommand        go to state 29
    fluxControl          go to state 30
    repetition           go to state 31


State 24

   37 commandBlock: '{' commandList • '}'

    '}'  shift, and go to state 49


State 25

   32 command: commandBlock • ';'

    ';'  shift, and go to state 50


State 26

   27 command: variableDeclaration • ';'

    ';'  shift, and go to state 51


State 27

   28 command: attribution • ';'

    ';'  shift, and go to state 52


State 28

   29 command: functionCall • ';'

    ';'  shift, and go to state 53


State 29

   30 command: returnCommand • ';'
   34        | returnCommand •

    ';'  shift, and go to state 54

    $default  reduce using rule 34 (command)


State 30

   31 command: fluxControl • ';'

    ';'  shift, and go to state 55


State 31

   33 command: repetition • ';'

    ';'  shift, and go to state 56


State 32

   66 unary: '-' •

    $default  reduce using rule 66 (unary)


State 33

   67 unary: '!' •

    $default  reduce using rule 67 (unary)


State 34

   51 expression: '(' • mathExpression ')'

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 57
    mathExpression  go to state 58
    unary           go to state 37


State 35

   15 multoArray: '[' expression • multoArrayList ']'
   52 mathExpression: expression • operador operando

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71

    $default  reduce using rule 18 (multoArrayList)

    multoArrayList  go to state 72
    operador        go to state 73


State 36

   50 expression: mathExpression •

    $default  reduce using rule 50 (expression)


State 37

   49 expression: unary • operando

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_IDENTIFICADOR  shift, and go to state 11

    literalTypes  go to state 79
    identifier    go to state 80
    functionCall  go to state 81
    operando      go to state 82


State 38

   23 parameter: types • identifier

    TK_IDENTIFICADOR  shift, and go to state 11

    identifier  go to state 83


State 39

   22 functionHeader: types identifier '(' parameter • parameterList ')'

    ','  shift, and go to state 84

    $default  reduce using rule 26 (parameterList)

    parameterList  go to state 85


State 40

   14 globalVar: types identifier multoArray varList • ';'
   19 varList: varList • ',' identifier multoArray

    ';'  shift, and go to state 86
    ','  shift, and go to state 87


State 41

   72 fluxControl: TK_PR_IF '(' • expression ')' TK_PR_THEN commandBlock else

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 88
    mathExpression  go to state 36
    unary           go to state 37


State 42

   75 repetition: TK_PR_WHILE '(' • expression ')' commandBlock

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 89
    mathExpression  go to state 36
    unary           go to state 37


State 43

   46 returnCommand: TK_PR_RETURN expression • ';'
   52 mathExpression: expression • operador operando

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    ';'        shift, and go to state 90

    operador  go to state 73


State 44

   38 localVariable: identifier •
   39              | identifier • TK_OC_LE literalTypes

    TK_OC_LE  shift, and go to state 91

    $default  reduce using rule 38 (localVariable)


State 45

   42 variableDeclaration: types localVariable • localVariableList

    ','  shift, and go to state 92

    $default  reduce using rule 41 (localVariableList)

    localVariableList  go to state 93


State 46

   44 functionCall: identifier '(' • expression expressionList ')'
   45             | identifier '(' • ')'

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34
    ')'  shift, and go to state 94

    $default  reduce using rule 68 (unary)

    expression      go to state 95
    mathExpression  go to state 36
    unary           go to state 37


State 47

   43 attribution: identifier multoArray • '=' expression

    '='  shift, and go to state 96


State 48

   35 commandList: command commandList •

    $default  reduce using rule 35 (commandList)


State 49

   37 commandBlock: '{' commandList '}' •

    $default  reduce using rule 37 (commandBlock)


State 50

   32 command: commandBlock ';' •

    $default  reduce using rule 32 (command)


State 51

   27 command: variableDeclaration ';' •

    $default  reduce using rule 27 (command)


State 52

   28 command: attribution ';' •

    $default  reduce using rule 28 (command)


State 53

   29 command: functionCall ';' •

    $default  reduce using rule 29 (command)


State 54

   30 command: returnCommand ';' •

    $default  reduce using rule 30 (command)


State 55

   31 command: fluxControl ';' •

    $default  reduce using rule 31 (command)


State 56

   33 command: repetition ';' •

    $default  reduce using rule 33 (command)


State 57

   52 mathExpression: expression • operador operando

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71

    operador  go to state 73


State 58

   50 expression: mathExpression •
   51           | '(' mathExpression • ')'

    ')'  shift, and go to state 97

    $default  reduce using rule 50 (expression)


State 59

   60 operador: TK_OC_LE •

    $default  reduce using rule 60 (operador)


State 60

   61 operador: TK_OC_GE •

    $default  reduce using rule 61 (operador)


State 61

   62 operador: TK_OC_EQ •

    $default  reduce using rule 62 (operador)


State 62

   63 operador: TK_OC_NE •

    $default  reduce using rule 63 (operador)


State 63

   64 operador: TK_OC_AND •

    $default  reduce using rule 64 (operador)


State 64

   65 operador: TK_OC_OR •

    $default  reduce using rule 65 (operador)


State 65

   58 operador: '<' •

    $default  reduce using rule 58 (operador)


State 66

   59 operador: '>' •

    $default  reduce using rule 59 (operador)


State 67

   53 operador: '+' •

    $default  reduce using rule 53 (operador)


State 68

   54 operador: '-' •

    $default  reduce using rule 54 (operador)


State 69

   56 operador: '*' •

    $default  reduce using rule 56 (operador)


State 70

   55 operador: '/' •

    $default  reduce using rule 55 (operador)


State 71

   57 operador: '%' •

    $default  reduce using rule 57 (operador)


State 72

   15 multoArray: '[' expression multoArrayList • ']'
   17 multoArrayList: multoArrayList • '^' expression

    ']'  shift, and go to state 98
    '^'  shift, and go to state 99


State 73

   52 mathExpression: expression operador • operando

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_IDENTIFICADOR  shift, and go to state 11

    literalTypes  go to state 79
    identifier    go to state 80
    functionCall  go to state 81
    operando      go to state 100


State 74

    8 literalTypes: TK_LIT_INT •

    $default  reduce using rule 8 (literalTypes)


State 75

    9 literalTypes: TK_LIT_FLOAT •

    $default  reduce using rule 9 (literalTypes)


State 76

   10 literalTypes: TK_LIT_FALSE •

    $default  reduce using rule 10 (literalTypes)


State 77

   11 literalTypes: TK_LIT_TRUE •

    $default  reduce using rule 11 (literalTypes)


State 78

   12 literalTypes: TK_LIT_CHAR •

    $default  reduce using rule 12 (literalTypes)


State 79

   70 operando: literalTypes •

    $default  reduce using rule 70 (operando)


State 80

   44 functionCall: identifier • '(' expression expressionList ')'
   45             | identifier • '(' ')'
   69 operando: identifier • multoArray

    '['  shift, and go to state 15
    '('  shift, and go to state 46

    $default  reduce using rule 16 (multoArray)

    multoArray  go to state 101


State 81

   71 operando: functionCall •

    $default  reduce using rule 71 (operando)


State 82

   49 expression: unary operando •

    $default  reduce using rule 49 (expression)


State 83

   23 parameter: types identifier •

    $default  reduce using rule 23 (parameter)


State 84

   25 parameterList: ',' • types identifier parameterList

    TK_PR_INT    shift, and go to state 3
    TK_PR_FLOAT  shift, and go to state 4
    TK_PR_BOOL   shift, and go to state 5
    TK_PR_CHAR   shift, and go to state 6

    types  go to state 102


State 85

   22 functionHeader: types identifier '(' parameter parameterList • ')'

    ')'  shift, and go to state 103


State 86

   14 globalVar: types identifier multoArray varList ';' •

    $default  reduce using rule 14 (globalVar)


State 87

   19 varList: varList ',' • identifier multoArray

    TK_IDENTIFICADOR  shift, and go to state 11

    identifier  go to state 104


State 88

   52 mathExpression: expression • operador operando
   72 fluxControl: TK_PR_IF '(' expression • ')' TK_PR_THEN commandBlock else

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    ')'        shift, and go to state 105

    operador  go to state 73


State 89

   52 mathExpression: expression • operador operando
   75 repetition: TK_PR_WHILE '(' expression • ')' commandBlock

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    ')'        shift, and go to state 106

    operador  go to state 73


State 90

   46 returnCommand: TK_PR_RETURN expression ';' •

    $default  reduce using rule 46 (returnCommand)


State 91

   39 localVariable: identifier TK_OC_LE • literalTypes

    TK_LIT_INT    shift, and go to state 74
    TK_LIT_FLOAT  shift, and go to state 75
    TK_LIT_FALSE  shift, and go to state 76
    TK_LIT_TRUE   shift, and go to state 77
    TK_LIT_CHAR   shift, and go to state 78

    literalTypes  go to state 107


State 92

   40 localVariableList: ',' • localVariable localVariableList

    TK_IDENTIFICADOR  shift, and go to state 11

    identifier     go to state 44
    localVariable  go to state 108


State 93

   42 variableDeclaration: types localVariable localVariableList •

    $default  reduce using rule 42 (variableDeclaration)


State 94

   45 functionCall: identifier '(' ')' •

    $default  reduce using rule 45 (functionCall)


State 95

   44 functionCall: identifier '(' expression • expressionList ')'
   52 mathExpression: expression • operador operando

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    ','        shift, and go to state 109

    $default  reduce using rule 48 (expressionList)

    expressionList  go to state 110
    operador        go to state 73


State 96

   43 attribution: identifier multoArray '=' • expression

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 111
    mathExpression  go to state 36
    unary           go to state 37


State 97

   51 expression: '(' mathExpression ')' •

    $default  reduce using rule 51 (expression)


State 98

   15 multoArray: '[' expression multoArrayList ']' •

    $default  reduce using rule 15 (multoArray)


State 99

   17 multoArrayList: multoArrayList '^' • expression

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 112
    mathExpression  go to state 36
    unary           go to state 37


State 100

   52 mathExpression: expression operador operando •

    $default  reduce using rule 52 (mathExpression)


State 101

   69 operando: identifier multoArray •

    $default  reduce using rule 69 (operando)


State 102

   25 parameterList: ',' types • identifier parameterList

    TK_IDENTIFICADOR  shift, and go to state 11

    identifier  go to state 113


State 103

   22 functionHeader: types identifier '(' parameter parameterList ')' •

    $default  reduce using rule 22 (functionHeader)


State 104

   19 varList: varList ',' identifier • multoArray

    '['  shift, and go to state 15

    $default  reduce using rule 16 (multoArray)

    multoArray  go to state 114


State 105

   72 fluxControl: TK_PR_IF '(' expression ')' • TK_PR_THEN commandBlock else

    TK_PR_THEN  shift, and go to state 115


State 106

   75 repetition: TK_PR_WHILE '(' expression ')' • commandBlock

    '{'  shift, and go to state 13

    commandBlock  go to state 116


State 107

   39 localVariable: identifier TK_OC_LE literalTypes •

    $default  reduce using rule 39 (localVariable)


State 108

   40 localVariableList: ',' localVariable • localVariableList

    ','  shift, and go to state 92

    $default  reduce using rule 41 (localVariableList)

    localVariableList  go to state 117


State 109

   47 expressionList: ',' • expression expressionList

    '-'  shift, and go to state 32
    '!'  shift, and go to state 33
    '('  shift, and go to state 34

    $default  reduce using rule 68 (unary)

    expression      go to state 118
    mathExpression  go to state 36
    unary           go to state 37


State 110

   44 functionCall: identifier '(' expression expressionList • ')'

    ')'  shift, and go to state 119


State 111

   43 attribution: identifier multoArray '=' expression •
   52 mathExpression: expression • operador operando

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71

    $default  reduce using rule 43 (attribution)

    operador  go to state 73


State 112

   17 multoArrayList: multoArrayList '^' expression •
   52 mathExpression: expression • operador operando

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71

    $default  reduce using rule 17 (multoArrayList)

    operador  go to state 73


State 113

   25 parameterList: ',' types identifier • parameterList

    ','  shift, and go to state 84

    $default  reduce using rule 26 (parameterList)

    parameterList  go to state 120


State 114

   19 varList: varList ',' identifier multoArray •

    $default  reduce using rule 19 (varList)


State 115

   72 fluxControl: TK_PR_IF '(' expression ')' TK_PR_THEN • commandBlock else

    '{'  shift, and go to state 13

    commandBlock  go to state 121


State 116

   75 repetition: TK_PR_WHILE '(' expression ')' commandBlock •

    $default  reduce using rule 75 (repetition)


State 117

   40 localVariableList: ',' localVariable localVariableList •

    $default  reduce using rule 40 (localVariableList)


State 118

   47 expressionList: ',' expression • expressionList
   52 mathExpression: expression • operador operando

    TK_OC_LE   shift, and go to state 59
    TK_OC_GE   shift, and go to state 60
    TK_OC_EQ   shift, and go to state 61
    TK_OC_NE   shift, and go to state 62
    TK_OC_AND  shift, and go to state 63
    TK_OC_OR   shift, and go to state 64
    '<'        shift, and go to state 65
    '>'        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '*'        shift, and go to state 69
    '/'        shift, and go to state 70
    '%'        shift, and go to state 71
    ','        shift, and go to state 109

    $default  reduce using rule 48 (expressionList)

    expressionList  go to state 122
    operador        go to state 73


State 119

   44 functionCall: identifier '(' expression expressionList ')' •

    $default  reduce using rule 44 (functionCall)


State 120

   25 parameterList: ',' types identifier parameterList •

    $default  reduce using rule 25 (parameterList)


State 121

   72 fluxControl: TK_PR_IF '(' expression ')' TK_PR_THEN commandBlock • else

    TK_PR_ELSE  shift, and go to state 123

    $default  reduce using rule 74 (else)

    else  go to state 124


State 122

   47 expressionList: ',' expression expressionList •

    $default  reduce using rule 47 (expressionList)


State 123

   73 else: TK_PR_ELSE • commandBlock

    '{'  shift, and go to state 13

    commandBlock  go to state 125


State 124

   72 fluxControl: TK_PR_IF '(' expression ')' TK_PR_THEN commandBlock else •

    $default  reduce using rule 72 (fluxControl)


State 125

   73 else: TK_PR_ELSE commandBlock •

    $default  reduce using rule 73 (else)
